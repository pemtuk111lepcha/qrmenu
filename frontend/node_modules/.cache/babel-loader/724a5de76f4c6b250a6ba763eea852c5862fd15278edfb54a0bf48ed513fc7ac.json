{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\projects by pemtuk\\\\qrmenu (2)\\\\qrmenu\\\\qrmenu\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport HomePage from \"./components/HomePage\";\nimport CustomerMenu from \"./components/CustomerMenu\";\nimport LoginPage from \"./components/LoginPage\";\nimport Dashboard from \"./components/Dashboard\";\nimport CustomerMenuQR from \"./components/CustomerMenuQR\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"./styles/LoginSignup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [page, setPage] = useState(\"home\");\n  const [menu, setMenu] = useState([]);\n  const [orders, setOrders] = useState([]);\n\n  // Fetch menu from backend\n  const fetchMenu = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const res = await axios.get(\"/api/menu\", {\n        headers: {\n          Authorization: token ? `Bearer ${token}` : undefined\n        },\n        params: {\n          userId: user === null || user === void 0 ? void 0 : user.id // fallback for GET if backend needs it\n        }\n      });\n      setMenu(res.data);\n    } catch {\n      setMenu([]);\n    }\n  };\n\n  // Fetch menu on mount and when login/signup occurs\n  useEffect(() => {\n    fetchMenu();\n  }, []);\n\n  // Fetch menu again after login/signup\n  const handleLoginSuccess = () => {\n    setPage(\"home\");\n    fetchMenu(); // Refresh menu after login/signup\n  };\n\n  // Add menu item via backend, then refresh menu\n  const handleAddMenuItem = async item => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.post(\"/api/menu\", item, {\n        headers: {\n          Authorization: token ? `Bearer ${token}` : undefined\n        }\n      });\n      await fetchMenu(); // Refresh menu after adding\n    } catch (err) {\n      // handle error (e.g., show message)\n    }\n  };\n\n  // Remove menu item via backend, then refresh menu\n  const handleRemoveMenuItem = async id => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`/api/menu/${id}`, {\n        headers: {\n          Authorization: token ? `Bearer ${token}` : undefined\n        }\n      });\n      await fetchMenu(); // Refresh menu after removing\n    } catch (err) {\n      // handle error (e.g., show message)\n    }\n  };\n  const handlePlaceOrder = order => {\n    setOrders(prev => [...prev, {\n      ...order,\n      id: Date.now(),\n      status: \"Pending\",\n      table: order.table || \"N/A\" // You can enhance this to collect table info\n    }]);\n  };\n\n  // Check authentication by token presence\n  const isLoggedIn = !!localStorage.getItem(\"token\");\n\n  // If logged in, always show Dashboard\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Dashboard, {\n      menu: menu,\n      setMenu: setMenu,\n      orders: orders,\n      setOrders: setOrders,\n      onAddMenuItem: handleAddMenuItem,\n      onRemoveMenuItem: handleRemoveMenuItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Helper to get userId from query string (for customer menu)\n  function getUserIdFromQuery() {\n    const params = new URLSearchParams(window.location.search);\n    return params.get(\"userId\");\n  }\n\n  // Show CustomerMenu if page is \"menu\" or path is \"/menu\"\n  if (page === \"menu\" || window.location.pathname === \"/menu\") {\n    const userId = getUserIdFromQuery();\n    return /*#__PURE__*/_jsxDEV(CustomerMenu, {\n      menu: menu,\n      onBack: () => setPage(\"home\"),\n      onPlaceOrder: handlePlaceOrder,\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show HomePage, LoginPage, or SignupPage\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [page === \"home\" && /*#__PURE__*/_jsxDEV(HomePage, {\n        onViewMenu: () => setPage(\"menu\"),\n        onLogin: () => setPage(\"LoginPage\"),\n        onSignup: () => setPage(\"SignupPage\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), page === \"LoginPage\" && /*#__PURE__*/_jsxDEV(LoginPage, {\n        onLogin: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 34\n      }, this), page === \"SignupPage\" && /*#__PURE__*/_jsxDEV(LoginPage, {\n        signupMode: true,\n        onLogin: handleLoginSuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/qrmenu\",\n          element: /*#__PURE__*/_jsxDEV(CustomerMenuQR, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VeoTefmGbHKrRZpPrQsvDrLdpyQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","HomePage","CustomerMenu","LoginPage","Dashboard","CustomerMenuQR","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","_s","page","setPage","menu","setMenu","orders","setOrders","fetchMenu","token","localStorage","getItem","user","JSON","parse","res","get","headers","Authorization","undefined","params","userId","id","data","handleLoginSuccess","handleAddMenuItem","item","post","err","handleRemoveMenuItem","delete","handlePlaceOrder","order","prev","Date","now","status","table","isLoggedIn","onAddMenuItem","onRemoveMenuItem","fileName","_jsxFileName","lineNumber","columnNumber","getUserIdFromQuery","URLSearchParams","window","location","search","pathname","onBack","onPlaceOrder","children","className","onViewMenu","onLogin","onSignup","signupMode","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/projects by pemtuk/qrmenu (2)/qrmenu/qrmenu/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport HomePage from \"./components/HomePage\";\r\nimport CustomerMenu from \"./components/CustomerMenu\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport CustomerMenuQR from \"./components/CustomerMenuQR\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport \"./styles/LoginSignup.css\";\r\n\r\nfunction App() {\r\n  const [page, setPage] = useState(\"home\");\r\n  const [menu, setMenu] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  // Fetch menu from backend\r\n  const fetchMenu = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const res = await axios.get(\"/api/menu\", {\r\n        headers: {\r\n          Authorization: token ? `Bearer ${token}` : undefined,\r\n        },\r\n        params: {\r\n          userId: user?.id, // fallback for GET if backend needs it\r\n        },\r\n      });\r\n      setMenu(res.data);\r\n    } catch {\r\n      setMenu([]);\r\n    }\r\n  };\r\n\r\n  // Fetch menu on mount and when login/signup occurs\r\n  useEffect(() => {\r\n    fetchMenu();\r\n  }, []);\r\n\r\n  // Fetch menu again after login/signup\r\n  const handleLoginSuccess = () => {\r\n    setPage(\"home\");\r\n    fetchMenu(); // Refresh menu after login/signup\r\n  };\r\n\r\n  // Add menu item via backend, then refresh menu\r\n  const handleAddMenuItem = async (item) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.post(\"/api/menu\", item, {\r\n        headers: {\r\n          Authorization: token ? `Bearer ${token}` : undefined,\r\n        },\r\n      });\r\n      await fetchMenu(); // Refresh menu after adding\r\n    } catch (err) {\r\n      // handle error (e.g., show message)\r\n    }\r\n  };\r\n\r\n  // Remove menu item via backend, then refresh menu\r\n  const handleRemoveMenuItem = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      await axios.delete(`/api/menu/${id}`, {\r\n        headers: {\r\n          Authorization: token ? `Bearer ${token}` : undefined,\r\n        },\r\n      });\r\n      await fetchMenu(); // Refresh menu after removing\r\n    } catch (err) {\r\n      // handle error (e.g., show message)\r\n    }\r\n  };\r\n\r\n  const handlePlaceOrder = (order) => {\r\n    setOrders((prev) => [\r\n      ...prev,\r\n      {\r\n        ...order,\r\n        id: Date.now(),\r\n        status: \"Pending\",\r\n        table: order.table || \"N/A\", // You can enhance this to collect table info\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Check authentication by token presence\r\n  const isLoggedIn = !!localStorage.getItem(\"token\");\r\n\r\n  // If logged in, always show Dashboard\r\n  if (isLoggedIn) {\r\n    return (\r\n      <Dashboard\r\n        menu={menu}\r\n        setMenu={setMenu}\r\n        orders={orders}\r\n        setOrders={setOrders}\r\n        onAddMenuItem={handleAddMenuItem}\r\n        onRemoveMenuItem={handleRemoveMenuItem}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Helper to get userId from query string (for customer menu)\r\n  function getUserIdFromQuery() {\r\n    const params = new URLSearchParams(window.location.search);\r\n    return params.get(\"userId\");\r\n  }\r\n\r\n  // Show CustomerMenu if page is \"menu\" or path is \"/menu\"\r\n  if (page === \"menu\" || window.location.pathname === \"/menu\") {\r\n    const userId = getUserIdFromQuery();\r\n    return (\r\n      <CustomerMenu\r\n        menu={menu}\r\n        onBack={() => setPage(\"home\")}\r\n        onPlaceOrder={handlePlaceOrder}\r\n        userId={userId}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Show HomePage, LoginPage, or SignupPage\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        {page === \"home\" && (\r\n          <HomePage\r\n            onViewMenu={() => setPage(\"menu\")}\r\n            onLogin={() => setPage(\"LoginPage\")}\r\n            onSignup={() => setPage(\"SignupPage\")}\r\n          />\r\n        )}\r\n        {page === \"LoginPage\" && <LoginPage onLogin={handleLoginSuccess} />}\r\n        {page === \"SignupPage\" && (\r\n          <LoginPage signupMode={true} onLogin={handleLoginSuccess} />\r\n        )}\r\n        <Routes>\r\n          <Route\r\n            path=\"/qrmenu\"\r\n            element={<CustomerMenuQR />}\r\n          />\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}