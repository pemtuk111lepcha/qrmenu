{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Downloads\\\\projects by pemtuk\\\\qrmenu (2)\\\\qrmenu\\\\qrmenu\\\\frontend\\\\src\\\\components\\\\OrdersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/OrderPage.css\";\nimport orderBg from \"../img/orderbg.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersPage = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    // Fetch orders from backend on mount\n    const fetchOrders = async () => {\n      try {\n        const res = await axios.get(\"/api/orders\");\n        // Accept both {orders: [...]}, [...], and fallback to []\n        let ordersArr = [];\n        if (Array.isArray(res.data)) {\n          ordersArr = res.data;\n        } else if (res.data && Array.isArray(res.data.orders)) {\n          ordersArr = res.data.orders;\n        } else if (res.data && res.data.data && Array.isArray(res.data.data)) {\n          ordersArr = res.data.data;\n        } else if (res.data && typeof res.data === \"object\") {\n          const arrKey = Object.keys(res.data).find(k => Array.isArray(res.data[k]));\n          if (arrKey) ordersArr = res.data[arrKey];\n        }\n        // Hide completed orders\n        setOrders(ordersArr.filter(order => order.status !== \"Completed\"));\n      } catch (err) {\n        setOrders([]);\n        console.error(\"Failed to fetch orders:\", err);\n      }\n    };\n    fetchOrders();\n  }, []);\n  const handleComplete = async id => {\n    await axios.patch(`/api/orders/${id}`, {\n      status: \"Completed\"\n    });\n    setOrders(prev => prev.filter(order => (order._id || order.id) !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-section\",\n    style: {\n      backgroundImage: `url('${orderBg}')`,\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center 2rem\",\n      backgroundSize: \"cover\",\n      alignContent: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      minHeight: \"800px\",\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        width: \"100%\",\n        maxWidth: \"500px\",\n        margin: \"0 auto\",\n        textAlign: \"center\"\n      },\n      children: [orders.length === 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No orders yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 33\n      }, this), orders.length > 0 && orders.map(order => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"1rem\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Table \", order.table, \": \", Array.isArray(order.items) ? order.items.join(\", \") : order.items, \" - \", order.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), order.status !== \"Completed\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          title: \"Mark as Completed\",\n          onChange: () => handleComplete(order._id || order.id),\n          style: {\n            width: \"18px\",\n            height: \"18px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, order._id || order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(OrdersPage, \"FvMuVccH6DXI6fqfhJiN/VsjZaw=\");\n_c = OrdersPage;\nexport default OrdersPage;\nvar _c;\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","orderBg","jsxDEV","_jsxDEV","OrdersPage","_s","orders","setOrders","fetchOrders","res","get","ordersArr","Array","isArray","data","arrKey","Object","keys","find","k","filter","order","status","err","console","error","handleComplete","id","patch","prev","_id","className","style","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","alignContent","display","flexDirection","alignItems","minHeight","color","children","fileName","_jsxFileName","lineNumber","columnNumber","width","maxWidth","margin","textAlign","length","map","gap","justifyContent","table","items","join","type","title","onChange","height","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Downloads/projects by pemtuk/qrmenu (2)/qrmenu/qrmenu/frontend/src/components/OrdersPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/OrderPage.css\";\r\nimport orderBg from \"../img/orderbg.jpg\";\r\n\r\nconst OrdersPage = () => {\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch orders from backend on mount\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/orders\");\r\n        // Accept both {orders: [...]}, [...], and fallback to []\r\n        let ordersArr = [];\r\n        if (Array.isArray(res.data)) {\r\n          ordersArr = res.data;\r\n        } else if (res.data && Array.isArray(res.data.orders)) {\r\n          ordersArr = res.data.orders;\r\n        } else if (res.data && res.data.data && Array.isArray(res.data.data)) {\r\n          ordersArr = res.data.data;\r\n        } else if (res.data && typeof res.data === \"object\") {\r\n          const arrKey = Object.keys(res.data).find(\r\n            k => Array.isArray(res.data[k])\r\n          );\r\n          if (arrKey) ordersArr = res.data[arrKey];\r\n        }\r\n        // Hide completed orders\r\n        setOrders(ordersArr.filter(order => order.status !== \"Completed\"));\r\n      } catch (err) {\r\n        setOrders([]);\r\n        console.error(\"Failed to fetch orders:\", err);\r\n      }\r\n    };\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const handleComplete = async (id) => {\r\n    await axios.patch(`/api/orders/${id}`, { status: \"Completed\" });\r\n    setOrders((prev) =>\r\n      prev.filter(order => (order._id || order.id) !== id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"orders-section\"\r\n      style={{\r\n        backgroundImage: `url('${orderBg}')`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundPosition: \"center 2rem\",\r\n        backgroundSize: \"cover\",\r\n        alignContent: \"center\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        minHeight: \"800px\",\r\n        color: \"white\"\r\n      }}\r\n    >\r\n      <h3>Orders</h3>\r\n      <ul\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"500px\",\r\n          margin: \"0 auto\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        {orders.length === 0 && <li>No orders yet.</li>}\r\n        {orders.length > 0 && orders.map((order) => (\r\n          <li\r\n            key={order._id || order.id}\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: \"1rem\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <span>\r\n              Table {order.table}: {Array.isArray(order.items) ? order.items.join(\", \") : order.items} - {order.status}\r\n            </span>\r\n            {order.status !== \"Completed\" && (\r\n              <input\r\n                type=\"checkbox\"\r\n                title=\"Mark as Completed\"\r\n                onChange={() => handleComplete(order._id || order.id)}\r\n                style={{ width: \"18px\", height: \"18px\" }}\r\n              />\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}